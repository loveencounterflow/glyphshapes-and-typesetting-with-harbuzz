{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/__OLD__types.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB,EAhB5B;;;;;EAsBA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAmB;IAAA,KAAA,EACjB;MAAA,gBAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAqB,CAArB;MAAT,CAAlD;MACA,kBAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,IAAL,CAAqB,CAAC,CAAC,IAAvB;MAAT,CADlD;MAEA,qBAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,OAAL,CAAqB,CAAC,CAAC,IAAvB;MAAT,CAFlD;MAGA,+CAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;QAChD,IAAmB,qBAAnB;AAAA,iBAAO,KAAP;;AACA,eAAO,IAAC,CAAA,WAAW,CAAC,MAAb,CAAoB,CAAC,CAAC,WAAtB;MAFyC;IAHlD;EADiB,CAAnB,EAtBA;;;EA+BA,IAAC,CAAA,OAAD,CAAS,SAAT,EAAoB;IAAA,KAAA,EAClB;MAAA,gBAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAqB,CAArB;MAAT,CAAlD;MACA,2BAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAqB,CAAC,CAAC,IAAvB;MAAT,CADlD;MAEA,2CAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;AACpD,YAAA;QAAI,IAAmB,kBAAnB;AAAA,iBAAO,KAAP;;AACA,eAAO,IAAC,CAAA,OAAD,QAAS,CAAC,CAAC,cAAc,UAAhB,QAAwB,QAAjC;MAFyC;IAFlD;EADkB,CAApB,EA/BA;;;;;EA0CA,IAAC,CAAA,QAAD,GACE;IAAA,QAAA,EACE;MAAA,OAAA,EAAS,KAAT;MACA,QAAA,EACE;QAAA,MAAA,EAAQ;MAAR;IAFF,CADF;IAIA,MAAA,EACE;MAAA,IAAA,EACE;QAAA,IAAA,EAAc,IAAd;QACA,QAAA,EAAc;MADd,CADF;MAGA,IAAA,EAAc,IAHd;MAIA,WAAA,EAAc;IAJd;EALF,EA3CF;;;EAwDA,IAAC,CAAA,IAAD,GAAQ,CAAA;AAxDR",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TEXTSHAPING-WITH-HARFBUZZ/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n\n#===========================================================================================================\n# TYPES\n#-----------------------------------------------------------------------------------------------------------\n@declare 'hb_cfg', tests:\n  \"x is an object\":                                 ( x ) -> @isa.object          x\n  \"x.text is a text\":                               ( x ) -> @isa.text            x.text\n  \"x.font is a hb_font\":                            ( x ) -> @isa.hb_font         x.font\n  \"x.arrangement? is an optional list of objects\":  ( x ) ->\n    return true unless x.arrangement?\n    return @isa_list_of.object x.arrangement\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'hb_font', tests:\n  \"x is an object\":                                 ( x ) -> @isa.object          x\n  \"x.path is a nonempty_text\":                      ( x ) -> @isa.nonempty_text   x.path\n  \"x.features? is an optional text or object\":      ( x ) ->\n    return true unless x.features?\n    return @type_of x.features in [ 'text', 'object', ]\n\n\n#===========================================================================================================\n# DEFAULTS, CASTS\n#-----------------------------------------------------------------------------------------------------------\n@defaults =\n  internal:\n    verbose: false\n    harfbuzz:\n      semver: '^2.7.4'\n  hb_cfg:\n    font:\n      path:         null\n      features:     null\n    text:         null\n    arrangement:  null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@cast = {}\n\n"
  ]
}